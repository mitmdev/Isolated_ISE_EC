--api.measure(0x3c, 55, 40, 5, 750, "/ec/temp")
--api.measure(0x3c, 55, 80, 1, 750, "/ec/ec")
--api.measure(0x3f, 39, 40, 5, 750, "/ise/temp")
--api.measure(0x3f, 39, 80, 1, 250, "/ise/ph")
--api.setTemp(0x3c, 5, tempC, "/ec/set/temp")
--api.setTemp(0x3f, 5, tempC, "/ise/set/temp")
--api.useTemperatureCompensation(0x3c, 1, 54, true|false)
--api.useTemperatureCompensation(0x3f, 1, 38, true|false)
--api.getTemperatureCompensation(0x3c, 54, "/ec/temp/compensation")
--api.getTemperatureCompensation(0x3f, 38, "/ise/temp/compensation")
--api.setTempConstant(ecprobe true|false)
--api.getTempConstant()
--api.setTempCoefficient(temp_coef)
--api.getTempCoefficient()
--api.reset(dev_addr, ecprobe true|false, topic)
--api.getCalibrate(0x3c, 33, "/ec/calibrate/offset")
--api.getCalibrate(0x3f, 9, "/ise/calibrate/offset")
--api.getCalibrate(0x3c, 17, "/ec/calibrate/ref/high")
--api.getCalibrate(0x3f, 13, "ise/calibrate/ref/high")
--api.getCalibrate(0x3c, 21, "/ec/calibrate/ref/low")
--api.getCalibrate(0x3f, 17, "/ise/calibrate/ref/low")
--api.getCalibrate(0x3c, 25, "/ec/calibrate/read/high")
--api.getCalibrate(0x3f, 21, "/ise/calibrate/read/high")
--api.getCalibrate(0x3c, 29, "/ec/calibrate/read/low")
--api.getCalibrate(0x3f, 25, "/ise/calibrate/read/low")
--api.calibration(solution, ecprobe) -- used internally
--api.calibrate(0x3c, 55, 20, 750, solution, true, "/ec/calibrate/single")
--api.calibrate(0x3f, 39, 20, 250, solution, false, "/ise/calibrate/single")
--api.calibrate(0x3c, 55, 10, 750, solution, true, "/ec/calibrate/low")
--api.calibrate(0x3f, 39, 10, 250, solution, false, "/ise/calibrate/low")
--api.calibrate(0x3c, 55, 8, 750, solution, true, "/ec/calibrate/high")
--api.calibrate(0x3f, 39, 8, 250, solution, false, "/ise/calibrate/high")
--api.setDualPointCalibration(refLow, refHigh, readLow, readHigh, ecprobe true|false)
--api.setCalibrateOffset(offset)
--api.getFirmware(0x3c, 53, "/ec/firmware")
--api.getFirmware(0x3f, 37, "/ise/firmware")
--api.getVersion(0x3c, 0, "/ec/version")
--api.getVersion(0x3f, 0, "/ise/version")
